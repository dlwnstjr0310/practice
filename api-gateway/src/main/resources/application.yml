eureka:
  instance:
    prefer-ip-address: false
    instance-id: gateway-server
  client:
    service-url:
      defaultZone: http://${EUREKA_NAME}:${EUREKA_PORT}/${EUREKA_HOST}/
    region: ap-northeast-2
#    registry-fetch-interval-seconds: 5

spring:
  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}
  config:
    import: classpath:application-key.yml
  application:
    name: gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: ${FIRST_ID}
          uri: lb://${FIRST_URI}
          predicates:
            - Path=${FIRST_PATH}
          filters:
            - GatewayAuthFilter
        - id: ${SECOND_ID}
          uri: lb://${SECOND_URI}
          predicates:
            - Path=${SECOND_PATH}
          filters:
            - GatewayAuthFilter
        - id: ${THIRD_ID}
          uri: lb://${THIRD_URI}
          predicates:
            - Path=${THIRD_PATH}
          filters:
            - GatewayAuthFilter
            - GatewayOrderFilter
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, info
  metrics:
    tags:
      application: gateway-server

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG

security:
  jwt:
    key: ${SECURITY_JWT_KEY}
