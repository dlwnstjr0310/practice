services:
  redis:
    image: redis:6.2.11
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - default
    volumes:
      - redis-data:/var/lib/redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  zookeeper-a:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-a-container
    ports:
      - '10000:2181'
    environment:
      ZOO_SERVERS: server.1=zookeeper-a:2888:3888;2181 server.2=zookeeper-b:2888:3888;2181 server.3=zookeeper-c:2888:3888;2181
      ZOO_MY_ID: 1
      ZOOKEEPER_CLIENT_PORT: 10000
      ZOOKEEPER_TICK_TIME: 2000

  zookeeper-b:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-b-container
    ports:
      - '10001:2181'
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper-a:2888:3888;2181 server.2=zookeeper-b:2888:3888;2181 server.3=zookeeper-c:2888:3888;2181
      ZOOKEEPER_CLIENT_PORT: 10001
      ZOOKEEPER_TICK_TIME: 2000

  zookeeper-c:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper-c-container
    ports:
      - '10002:2181'
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper-a:2888:3888;2181 server.2=zookeeper-b:2888:3888;2181 server.3=zookeeper-c:2888:3888;2181
      ZOOKEEPER_CLIENT_PORT: 10002
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka-container
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper-a
      - zookeeper-b
      - zookeeper-c
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-a:10000,zookeeper-b:10001,zookeeper-c:10002
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${KAFKA_EXTERNAL_HOST}:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-container
    depends_on:
      - kafka
    ports:
      - "9999:9999"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-a:10000,zookeeper-b:10001,zookeeper-c:10002
      KAFKA_CLUSTERS_0_READONLY: "false"
      SERVER_PORT: 9999

volumes:
  redis-data:
  kafka-data:

networks:
  default:
    driver: bridge