server:
  port: 8084

spring:
  config:
    import: classpath:application-key.yml
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: payment-group
      auto-offset-reset: earliest
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: com.study.payment.domain.event.consumer.OrderCreatedEvent
        spring.json.value.trusted.packages: com.study.payment.domain.event.consumer
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
        spring.json.value.trusted.packages: com.study.payment.domain.event.producer
    listener:
      ack-mode: record

---

eureka:
  instance:
    initial-status: up
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://${EUREKA_NAME}:${EUREKA_PORT}/${EUREKA_HOST}/
    region: ap-northeast-2
